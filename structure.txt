# Photography Portfolio - Complete File Structure

```
photography-portfolio/
├── README.md
├── .gitignore
│
├── backend/                           # FastAPI Backend
│   ├── main.py                       # Main FastAPI application
│   ├── requirements.txt              # Python dependencies
│   ├── .env                         # Environment variables (create this)
│   ├── .env.example                 # Example environment file
│   ├── photography_portfolio.db     # SQLite database (auto-generated)
│   ├── uploads/                     # Uploaded photos directory
│   │   ├── thumbnails/             # Auto-generated thumbnails
│   │   └── originals/              # Original uploaded photos
│   ├── app/                        # Application modules (optional organization)
│   │   ├── __init__.py
│   │   ├── models.py               # Database models
│   │   ├── schemas.py              # Pydantic schemas
│   │   ├── auth.py                 # Authentication logic
│   │   ├── database.py             # Database configuration
│   │   └── routers/                # API route modules
│   │       ├── __init__.py
│   │       ├── auth.py
│   │       ├── photos.py
│   │       └── categories.py
│   └── tests/                      # Backend tests
│       ├── __init__.py
│       ├── test_auth.py
│       └── test_photos.py
│
├── frontend/                       # React Frontend
│   ├── package.json               # Node.js dependencies
│   ├── package-lock.json          # Locked dependency versions
│   ├── .env                       # Environment variables (create this)
│   ├── .env.example               # Example environment file
│   ├── tailwind.config.js         # Tailwind CSS configuration
│   ├── postcss.config.js          # PostCSS configuration
│   ├── public/                    # Public static files
│   │   ├── index.html            # Main HTML template
│   │   ├── favicon.ico           # Website icon
│   │   ├── logo192.png           # PWA icon
│   │   ├── logo512.png           # PWA icon
│   │   ├── manifest.json         # PWA manifest
│   │   └── robots.txt            # SEO robots file
│   ├── src/                      # React source code
│   │   ├── index.js              # Main entry point
│   │   ├── index.css             # Global styles with Tailwind
│   │   ├── App.js                # Main App component
│   │   ├── App.css               # App-specific styles
│   │   ├── components/           # Reusable React components
│   │   │   ├── Layout/
│   │   │   │   ├── Header.js
│   │   │   │   ├── Footer.js
│   │   │   │   └── Navigation.js
│   │   │   ├── Gallery/
│   │   │   │   ├── PhotoGrid.js
│   │   │   │   ├── PhotoCard.js
│   │   │   │   ├── PhotoModal.js
│   │   │   │   └── CategoryFilter.js
│   │   │   ├── Admin/
│   │   │   │   ├── AdminPanel.js
│   │   │   │   ├── UploadModal.js
│   │   │   │   ├── PhotoManager.js
│   │   │   │   └── LoginForm.js
│   │   │   ├── UI/
│   │   │   │   ├── Button.js
│   │   │   │   ├── Input.js
│   │   │   │   ├── Modal.js
│   │   │   │   ├── LoadingSpinner.js
│   │   │   │   └── ProgressBar.js
│   │   │   └── Forms/
│   │   │       ├── ContactForm.js
│   │   │       └── PhotoEditForm.js
│   │   ├── pages/                # Page components
│   │   │   ├── Home.js
│   │   │   ├── Portfolio.js
│   │   │   ├── About.js
│   │   │   ├── Services.js
│   │   │   ├── Contact.js
│   │   │   └── Admin.js
│   │   ├── services/             # API and external services
│   │   │   ├── api.js            # Main API configuration
│   │   │   ├── auth.js           # Authentication services
│   │   │   ├── photos.js         # Photo-related API calls
│   │   │   └── utils.js          # Utility functions
│   │   ├── hooks/                # Custom React hooks
│   │   │   ├── useAuth.js        # Authentication hook
│   │   │   ├── usePhotos.js      # Photo management hook
│   │   │   └── useUpload.js      # File upload hook
│   │   ├── context/              # React Context providers
│   │   │   ├── AuthContext.js    # Authentication context
│   │   │   └── PhotoContext.js   # Photo state context
│   │   ├── utils/                # Utility functions
│   │   │   ├── constants.js      # App constants
│   │   │   ├── helpers.js        # Helper functions
│   │   │   └── validation.js     # Form validation
│   │   └── assets/               # Static assets
│   │       ├── images/
│   │       │   ├── hero-bg.jpg
│   │       │   ├── about-photo.jpg
│   │       │   └── placeholder.jpg
│   │       └── icons/
│   │           └── camera.svg
│   ├── build/                    # Production build (auto-generated)
│   └── node_modules/             # Node.js dependencies (auto-generated)
│
├── docker/                       # Docker configuration (optional)
│   ├── docker-compose.yml        # Development environment
│   ├── docker-compose.prod.yml   # Production environment
│   ├── Dockerfile.backend        # Backend container
│   ├── Dockerfile.frontend       # Frontend container
│   └── nginx.conf                # Nginx configuration
│
├── scripts/                      # Utility scripts
│   ├── setup.sh                  # Initial setup script
│   ├── deploy.sh                 # Deployment script
│   └── backup.sh                 # Database backup script
│
└── docs/                         # Documentation
    ├── API.md                    # API documentation
    ├── DEPLOYMENT.md             # Deployment guide
    ├── CONTRIBUTING.md           # Contribution guidelines
    └── images/                   # Documentation images
        ├── architecture.png
        └── screenshots/
            ├── homepage.png
            ├── gallery.png
            └── admin-panel.png
```

## Key Files to Create

### 1. Backend Files

**requirements.txt**
```txt
fastapi==0.104.1
uvicorn[standard]==0.24.0
python-multipart==0.0.6
sqlalchemy==2.0.23
pydantic==2.5.0
python-jose[cryptography]==3.3.0
passlib[bcrypt]==1.7.4
pillow==10.1.0
python-decouple==3.8
```

**backend/.env** (create this file)
```env
SECRET_KEY=your-super-secret-key-change-this-in-production
DATABASE_URL=sqlite:///./photography_portfolio.db
CORS_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
UPLOAD_DIR=uploads
MAX_FILE_SIZE=10485760
ALLOWED_EXTENSIONS=jpg,jpeg,png,gif,webp
```

### 2. Frontend Files

**frontend/package.json**
```json
{
  "name": "photography-frontend",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@testing-library/jest-dom": "^5.16.4",
    "@testing-library/react": "^13.3.0",
    "@testing-library/user-event": "^13.5.0",
    "axios": "^1.6.0",
    "lucide-react": "^0.263.1",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-router-dom": "^6.8.0",
    "react-scripts": "5.0.1",
    "web-vitals": "^2.1.4"
  },
  "devDependencies": {
    "autoprefixer": "^10.4.14",
    "postcss": "^8.4.24",
    "tailwindcss": "^3.3.0"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}
```

**frontend/.env** (create this file)
```env
REACT_APP_API_URL=http://localhost:8000
REACT_APP_UPLOAD_MAX_SIZE=10485760
REACT_APP_SUPPORTED_FORMATS=jpg,jpeg,png,gif,webp
```

**frontend/tailwind.config.js**
```javascript
/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    "./src/**/*.{js,jsx,ts,tsx}",
  ],
  theme: {
    extend: {
      animation: {
        'fade-in': 'fadeIn 0.5s ease-in-out',
        'slide-up': 'slideUp 0.6s ease-out',
        'slide-up-delay': 'slideUp 0.6s ease-out 0.3s both',
        'fade-in-delay': 'fadeIn 0.5s ease-in-out 0.6s both',
      },
      keyframes: {
        fadeIn: {
          '0%': { opacity: '0' },
          '100%': { opacity: '1' },
        },
        slideUp: {
          '0%': { opacity: '0', transform: 'translateY(30px)' },
          '100%': { opacity: '1', transform: 'translateY(0)' },
        },
      },
    },
  },
  plugins: [],
}
```

### 3. Root Files

**.gitignore**
```gitignore
# Dependencies
node_modules/
backend/venv/
backend/__pycache__/
*.pyc

# Environment variables
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# Database
*.db
*.sqlite3

# Uploads
backend/uploads/
!backend/uploads/.gitkeep

# Logs
npm-debug.log*
yarn-debug.log*
yarn-error.log*
*.log

# Build directories
frontend/build/
backend/dist/

# IDE
.vscode/
.idea/
*.swp
*.swo

# OS
.DS_Store
Thumbs.db

# Temporary files
*.tmp
*.temp
```

**docker-compose.yml** (optional)
```yaml
version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - uploads_data:/app/uploads
    environment:
      - DATABASE_URL=sqlite:///./photography_portfolio.db
    
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:8000

volumes:
  uploads_data:
```

## Setup Commands

### Initial Project Setup
```bash
# Create project directory
mkdir photography-portfolio
cd photography-portfolio

# Setup backend
mkdir backend
cd backend
python -m venv venv
source venv/bin/activate  # On Windows: venv\Scripts\activate
pip install -r requirements.txt

# Setup frontend
cd ../
npx create-react-app frontend
cd frontend
npm install lucide-react axios
npm install -D tailwindcss postcss autoprefixer
npx tailwindcss init -p
```

### Running the Project
```bash
# Terminal 1 - Backend
cd backend
source venv/bin/activate
uvicorn main:app --reload

# Terminal 2 - Frontend
cd frontend
npm start
```

This structure provides a professional, scalable foundation for the photography portfolio with clear separation of concerns and room for growth!